# Generated by Django 5.1.4 on 2025-01-25 18:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('scheduled_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Consultaions',
                'ordering': ['scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Consultation_Status',
            },
        ),
        migrations.CreateModel(
            name='ConsultationTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Consultation_Type',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='LevelReferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=10, unique=True)),
                ('required_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'level_reference',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='LevelUpgradeStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Level_Upgrade_Status',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(verbose_name=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_key', models.CharField(max_length=50)),
                ('config_value', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=16)),
                ('is_login', models.BooleanField(default=False)),
                ('reset_password_token', models.CharField(blank=True, max_length=100, null=True)),
                ('reset_password_expire', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.roles')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(max_length=20)),
                ('table_name', models.CharField(max_length=100)),
                ('record_id', models.IntegerField()),
                ('old_value', models.TextField()),
                ('new_value', models.TextField()),
                ('ip_address', models.CharField(max_length=100)),
                ('timestamp', models.TimeField()),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'AuditLog',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('file_path', models.FileField(upload_to='documnets/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.consultations')),
            ],
            options={
                'db_table': 'Consultation_Materials',
            },
        ),
        migrations.AddField(
            model_name='consultations',
            name='status_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.consultationstatus'),
        ),
        migrations.AddField(
            model_name='consultations',
            name='consultation_type_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.consultationtypes'),
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField()),
                ('logout_time', models.DateTimeField()),
                ('ip_address', models.CharField(max_length=100)),
                ('device_info', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'LoginHistory',
            },
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('management_account_id', models.CharField(max_length=50)),
                ('position', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now_add=True)),
                ('department_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Management',
                'ordering': ['management_account_id'],
            },
        ),
        migrations.AddField(
            model_name='consultations',
            name='management_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.management'),
        ),
        migrations.CreateModel(
            name='Notificaitons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Notificaitons',
            },
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nurse_account_id', models.CharField(max_length=50)),
                ('profile_picture', models.BinaryField(blank=True, null=True)),
                ('hire_date', models.DateField()),
                ('years_of_service', models.DateField(default=0)),
                ('level_upgrade_date', models.DateField(auto_now=True)),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now_add=True)),
                ('current_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.levelreferences')),
                ('department_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.department')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Nurse',
                'ordering': ['nurse_account_id'],
            },
        ),
        migrations.CreateModel(
            name='MaterialReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField()),
                ('consultation_materials_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.consultationmaterials')),
                ('nurse_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.nurse')),
            ],
            options={
                'db_table': 'material_read_status',
            },
        ),
        migrations.CreateModel(
            name='LevelUpgradeRequests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField()),
                ('is_approve', models.BooleanField(default=False)),
                ('approval_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_level_requests', to='core.levelreferences')),
                ('requested_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_level_requests', to='core.levelreferences')),
                ('status_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.levelupgradestatus')),
                ('management_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.management')),
                ('nurse_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.nurse')),
            ],
            options={
                'db_table': 'Level_Upgrade_Requests',
                'ordering': ['request_date'],
            },
        ),
        migrations.AddField(
            model_name='consultations',
            name='nurses_id',
            field=models.ManyToManyField(to='core.nurse'),
        ),
        migrations.CreateModel(
            name='ConsultationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nurse_feedback', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.consultations')),
                ('nurse_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.nurse')),
            ],
            options={
                'db_table': 'Consultation_Result',
            },
        ),
    ]
